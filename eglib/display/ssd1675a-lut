enum waveform_voltage_t {
	VSS,  // 00
	VSH1, // 01
	VSL,  // 10
	VSH2, // 11
};
struct __attribute__ ((__packed__)) waveform_lut_group_t {
	waveform_voltage_t phase_a : 2;
	waveform_voltage_t phase_b : 2;
	waveform_voltage_t phase_c : 2;
	waveform_voltage_t phase_d : 2;
};
// VS[nX-LUTn]
struct __attribute__ ((__packed__)) waveform_lut_t {
	waveform_lut_group_t group_1;
	waveform_lut_group_t group_0;
	waveform_lut_group_t group_2;
	waveform_lut_group_t group_3;
	waveform_lut_group_t group_4;
	waveform_lut_group_t group_5;
	waveform_lut_group_t group_6;
};
struct __attribute__ ((__packed__)) waveform_timing_t {
	// TP[nX]
	uint8_t phase_a_length;
	uint8_t phase_b_length;
	uint8_t phase_c_length;
	uint8_t phase_d_length;
	// RP[n]
	uint8_t repeat_count;
};
struct __attribute__ ((__packed__)) waveform_t {
	waveform_lut_t lut0_black;
	waveform_lut_t lut1_white;
	waveform_lut_t lut2_red;
	waveform_lut_t lut3_red;
	waveform_lut_t lut4_vcom;
	waveform_timing_t timing_group0;
	waveform_timing_t timing_group1;
	waveform_timing_t timing_group2;
	waveform_timing_t timing_group3;
	waveform_timing_t timing_group4;
	waveform_timing_t timing_group5;
	waveform_timing_t timing_group6;
};
.waveform = &(waveform_t){
	.lut0_black = {
		.group_0 = {
			.phase_a = VSL,
			.phase_b = VSL,
			.phase_c = VSL,
			.phase_d = VSL
		}, // 0xAA
		.group_1 = {VSL, VSH1, VSL, VSH1}, // 0x99
		.group_2 = {VSS, VSH1, VSS, VSS}, // 0x10
		.group_3 = {VSS, VSS, VSS, VSS}, // 0x00
		.group_4 = {VSS, VSS, VSS, VSS}, // 0x00
		.group_5 = {VSS, VSS, VSS, VSS}, // 0x00
		.group_6 = {VSS, VSS, VSS, VSS}, // 0x00
	},
	.lut1_white = {
		.group_0 = {VSH1, VSH1, VSH1, VSH1}, // 0x55
		.group_1 = {VSL, VSH1, VSL, VSH1}, // 0x99
		.group_2 = {VSL, VSS, VSS, VSS}, // 0x80
		.group_3 = {VSS, VSS, VSS, VSS}, // 0x00
		.group_4 = {VSS, VSS, VSS, VSS}, // 0x00
		.group_5 = {VSS, VSS, VSS, VSS}, // 0x00
		.group_6 = {VSS, VSS, VSS, VSS}, // 0x00
	},
	.lut2_red = {
		.group_0 = {VSL, VSS, VSL, VSL}, // 0x8A
		.group_1 = {VSL, VSL, VSL, VSS}, // 0xA8
		.group_2 = {VSL, VSH1, VSL, VSH2}, // 0x9B
		.group_3 = {VSS, VSS, VSS, VSS}, // 0x00
		.group_4 = {VSS, VSS, VSS, VSS}, // 0x00
		.group_5 = {VSS, VSS, VSS, VSS}, // 0x00
		.group_6 = {VSS, VSS, VSS, VSS}, // 0x00
	},
	.lut3_red = {
		.group_0 = {VSL, VSS, VSL, VSL}, // 0x8A
		.group_1 = {VSL, VSL, VSL, VSS}, // 0xA8
		.group_2 = {VSL, VSH1, VSL, VSH2}, // 0x9B
		.group_3 = {VSS, VSS, VSS, VSS}, // 0x00
		.group_4 = {VSS, VSS, VSS, VSS}, // 0x00
		.group_5 = {VSS, VSS, VSS, VSS}, // 0x00
		.group_6 = {VSS, VSS, VSS, VSS}, // 0x00
	},
	.lut4_vcom = {
		.group_0 = {VSS, VSS, VSS, VSS}, // 0x00
		.group_1 = {VSS, VSS, VSS, VSS}, // 0x00
		.group_2 = {VSS, VSS, VSS, VSS}, // 0x00
		.group_3 = {VSS, VSS, VSS, VSS}, // 0x00
		.group_4 = {VSS, VSS, VSS, VSS}, // 0x00
		.group_5 = {VSS, VSS, VSS, VSS}, // 0x00
		.group_6 = {VSS, VSS, VSS, VSS}, // 0x00
	},
	.timing_group0 {
		.phase_a_length = 15;
		.phase_b_length = 15;
		.phase_c_length = 15;
		.phase_d_length = 15;
		.repeat_count = 2;
	}
	.timing_group1 {
		.phase_a_length = 20;
		.phase_b_length = 20;
		.phase_c_length = 20;
		.phase_d_length = 20;
		.repeat_count = 6;
	}
	.timing_group2 {
		.phase_a_length = 20;
		.phase_b_length = 20;
		.phase_c_length = 12;
		.phase_d_length = 130;
		.repeat_count = 8;
	}
	.timing_group3 {
		.phase_a_length = 0;
		.phase_b_length = 0;
		.phase_c_length = 0;
		.phase_d_length = 0;
		.repeat_count = 0;
	}
	.timing_group4 {
		.phase_a_length = 0;
		.phase_b_length = 0;
		.phase_c_length = 0;
		.phase_d_length = 0;
		.repeat_count = 0;
	}
	.timing_group5 {
		.phase_a_length = 0;
		.phase_b_length = 0;
		.phase_c_length = 0;
		.phase_d_length = 0;
		.repeat_count = 0;
	}
	.timing_group6 {
		.phase_a_length = 0;
		.phase_b_length = 0;
		.phase_c_length = 0;
		.phase_d_length = 0;
		.repeat_count = 0;
	}
}