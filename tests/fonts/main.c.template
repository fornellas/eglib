#include <eglib.h>
#include <eglib/hal/four_wire_spi/none.h>
#include <eglib/display/tga.h>

#include <stdio.h>

#define ROWS 7
#define CHARS_PER_ROW 32
#define START_CHAR 32

int main(int argc, char *argv[]) {
	eglib_t eglib_probe;
	tga_config_t tga_config_probe = {
		.width = 100,
		.height = 100,
	};
	eglib_t eglib;
	tga_config_t tga_config;
	char *text[ROWS] = {
		" !\"#$%&'()*+,-./0123456789:;<=>?",
		"@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_",
		"`abcdefghijklmnopqrstuvwxyz{|}~",
		"",
		" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿",
		"ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞß",
		"àáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ",
	};
	coordinate_t width, new_width;
	struct font_t *font;

	font = &FONT;

	eglib_Init(&eglib_probe, &four_wire_spi_none, NULL, &tga, &tga_config_probe);

	eglib_SetFont(&eglib_probe, font);

	width = 0;

	for(int row=0 ; row < ROWS ; row++) {
		new_width = eglib_GetTextWidt(&eglib_probe, text[row]);
		if(new_width > width)
			width = new_width;
	}

	tga_config.width = width;
	tga_config.height = font->line_space * ROWS;

	eglib_Init(&eglib, &four_wire_spi_none, NULL, &tga, &tga_config);

	eglib_SetIndexColor(&eglib, 0, 255, 255, 255);
	eglib_ClearScreen(&eglib);

	eglib_SetFont(&eglib, font);
	eglib_SetIndexColor(&eglib, 0, 0, 0, 0);
	for(int row=0 ; row < ROWS ; row++)
		eglib_DrawText(&eglib, 0, row * font->line_space + font->ascent , text[row]);

	if(argc == 2)
		tga_Save(&eglib, argv[1]);
	else
		return 1;
}